rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read their own profile
    match /users/{userId} {
      // Allow any authenticated user to read user profiles (public data)
      allow read: if request.auth != null;
      
      // Allow users to update their own profile
      allow update, delete: if request.auth != null && request.auth.uid == userId;
      
      // Allow create profile when user signs up
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Admins can write to any user profile
      allow write: if request.auth != null && 
                   exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Mentors collection
    match /mentors/{mentorId} {
      // Anyone logged in can read mentors
      allow read: if request.auth != null;
      
      // Allow users to create and update their own mentor profile with a simpler rule
      allow create, update, delete: if request.auth != null && 
                    (request.auth.uid == mentorId || 
                     request.auth.uid == resource.data.userId ||
                     exists(/databases/$(database)/documents/mentors/$(request.auth.uid)));
      
      // Admin can write to any mentor profile
      allow write: if request.auth != null && 
                   exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Mentees collection
    match /mentees/{menteeId} {
      allow read: if request.auth != null; // Anyone logged in can view mentees
      allow write: if request.auth != null && 
                    (request.auth.uid == menteeId || 
                     request.auth.uid == resource.data.userId ||
                     exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Sessions collection - all authenticated users can read sessions
    match /sessions/{sessionId} {
      allow read: if request.auth != null;
      // Allow users to create sessions if they are authenticated
      allow create: if request.auth != null;
      // Allow users to update sessions only if they are involved in the session
      allow update, delete: if request.auth != null && 
                      (request.auth.uid == resource.data.mentorId || 
                       request.auth.uid == resource.data.menteeId || 
                       exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Availability collection
    match /availability/{docId} {
      allow read: if request.auth != null; // Anyone logged in can view availability
      
      // Allow creating availability documents
      allow create: if request.auth != null;
      
      // Allow updating availability if you are the mentor or an admin
      allow update, delete: if request.auth != null && 
                    (
                      // Direct match with Auth UID
                      request.auth.uid == resource.data.mentorId ||
                      
                      // Check if the current user is the mentor via mentor document lookup
                      exists(/databases/$(database)/documents/mentors/$(resource.data.mentorId)) &&
                      get(/databases/$(database)/documents/mentors/$(resource.data.mentorId)).data.userId == request.auth.uid ||
                      
                      // Admin check
                      exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
                    );
    }
    
    // Ratings collection
    match /ratings/{ratingId} {
      allow read: if request.auth != null; // Anyone logged in can view ratings
      allow create: if request.auth != null; // Anyone logged in can create ratings
      allow update, delete: if request.auth != null && 
                      (request.auth.uid == resource.data.userId || 
                       exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Payments collection
    match /payments/{paymentId} {
      allow read: if request.auth != null && 
                   (
                     // Mentor can read
                     request.auth.uid == resource.data.mentorId ||
                     // Mentee can read
                     request.auth.uid == resource.data.menteeId ||
                     // Support for potential userId field
                     request.auth.uid == resource.data.userId ||
                     // Admins can read any payment
                     (
                       exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
                     )
                   );
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                      exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
} 